---
- name: Ensure dotfiles repository is cloned.
  ansible.builtin.git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_repo_local_destination }}"
    version: "{{ dotfiles_repo_version }}"
    accept_hostkey: "{{ dotfiles_repo_accept_hostkey }}"
  become: false

- name: Ensure all dotfiles in '~/' are links.
  ansible.builtin.command: "ls -F ~/{{ item | basename }}"
  failed_when: false
  check_mode: false
  changed_when: false
  register: existing_dotfile_home_info
  with_items: "{{ home_links }}"

- name: Remove existing dotfiles if replacement is being linked.
  file:
    path: "~/{{ home_links[item.0] }}"
    state: absent
  when: "'@' not in item.1.stdout"
  with_indexed_items: "{{ existing_dotfile_home_info }}"

- name: Ensure all dotfiles in '{{ xdg_config_home }}' are links.
  ansible.builtin.command: "ls -F {{ [xdg_config_home, item.dest | default(omit), item.src | default(item) | basename] | reject('equalto', omit) | join('/' }}"
  failed_when: false
  check_mode: false
  changed_when: false
  register: existing_xdg_config_info
  with_items: "{{ home_links }}"
