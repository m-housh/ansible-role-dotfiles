---
- name: Ensure dotfiles repository is cloned.
  ansible.builtin.git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_repo_local_destination }}"
    version: "{{ dotfiles_repo_version }}"
    accept_hostkey: "{{ dotfiles_repo_accept_hostkey }}"
  become: false

- import_tasks: parse.yml

- name: Ensure config home exists.
  ansible.builtin.file:
    path: "{{ xdg_config_home }}"
    mode: '0755'
    state: directory

- name: Ensure all dotfiles in are links.
  ansible.builtin.command: "ls -F {{ item.dest }}"
  failed_when: false
  check_mode: false
  changed_when: false
  register: existing_dotfile_info
  with_items: "{{ parsed_links }}"

- name: Remove existing dotfiles if replacement is being linked.
  ansible.builtin.file:
    path: "~/{{ parsed_links[item.0] }}"
    state: absent
  when: "'@' not in item.1.stdout"
  with_indexed_items: "{{ existing_dotfile_info.results }}"

- name: Ensure parent directories exist.
  ansible.builtin.file:
    path: "{{ item.dest | dirname }}"
    state: directory
  with_items: "{{ parsed_links }}"

- name: Link dotfiles into home folder.
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  become: false
  with_items: "{{ parsed_links }}"

- name: Create local zsh environment file.
  block:
    - name: Check if local file exists.
      ansible.builtin.stat:
        path: "{{ zsh_local_env_path }}"
      register: zsh_env_stat

    - name: Ensure local zsh directory exists.
      ansible.builtin.file:
        path: "{{ zsh_local_env_path | dirname }}"
        state: directory
        mode: "0755"
      when: zsh_env_stat.stat.exists is false

    - name: Create local zsh env file.
      ansible.builtin.copy:
        src: files/env.zsh
        dest: "{{ zsh_local_env_path }}"
        mode: '0755'
      when: zsh_env_stat.stat.exists is false
  tags: zsh-env

- name: Install tmux plugin manager.
  ansible.builtin.git:
    repo: "https://github.com/tmux-plugins/tpm"
    dest: "{{ xdg_config_home }}/tmux/plugins/tpm"
    version: "master"
    accept_hostkey: false
  become: false
  tags: tmux-plugins

